{"version":3,"sources":["redux/actionTypes.ts","redux/actions.ts","components/ListItem/ListItem.component.tsx","components/List/List.component.tsx","components/Input/Input.component.tsx","components/Logo/Logo.component.tsx","components/Select/Select.component.tsx","components/Button/Button.component.tsx","helpers/helpers.ts","components/Header/Header.component.tsx","App.tsx","redux/reducer.ts","index.tsx"],"names":["types","setDataAction","data","type","payload","setLoading","loading","ListItem","props","listItem","logo_url","name","rank","status","price","className","src","alt","parseFloat","price_change","toFixed","List","filteredList","filter","el","toLowerCase","includes","inputValue","map","item","id","connect","state","dispatch","setInputValue","val","Input","placeholder","value","onChange","e","target","Logo","title","selectValue","setSelectValue","NativeSelect","onChangeHandler","inputProps","options","optionName","Button","onClick","onClickHandler","fetchDataAndSet","params","a","fetch","url","then","res","json","parsedRes","setToState","swap","items","firstIndex","secondIndex","temp","quickSort","arr","left","right","index","length","center","Math","floor","i","j","partition","sortOptions","setData","sortedData","sort","itemOne","itemTwo","exportObj","exportName","console","log","reducedCoins","reduce","acc","rest","dataJson","encodeURIComponent","JSON","stringify","downloadTriggerNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadData","isLoading","useEffect","color","height","width","initialState","store","createStore","action","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdc5a04a.chunk.js","sourcesContent":["export const types = {\n  SET_DATA: \"SET_DATA\",\n  SET_INPUT_VALUE: \"SET_INPUT_VALUE\",\n  SET_SELECT_VALUE: \"SET_SELECT_VALUE\",\n  UPDATE_DASHBOARD: \"UPDATE_DASHBOARD\",\n  SET_LOADING: \"SET_LOADING\",\n} as const;\n","import { CoinType } from \"./types/reducer.types\";\nimport { types } from \"./actionTypes\";\n\nexport const setDataAction = (data: CoinType[]) => ({\n  type: types.SET_DATA,\n  payload: data,\n});\n\nexport const SetInputValue = (value: string) => ({\n  type: types.SET_INPUT_VALUE,\n  payload: value,\n});\n\nexport const SetSelectValue = (value: string) => ({\n  type: types.SET_SELECT_VALUE,\n  payload: value,\n});\n\nexport const updateDashboard = (data: CoinType[]) => ({\n  type: types.UPDATE_DASHBOARD,\n  payload: { data },\n});\n\nexport const setLoading = (loading: boolean) => ({\n  type: types.SET_LOADING,\n  payload: loading,\n});\n","import React from \"react\";\nimport { CoinType } from \"../../redux/types/reducer.types\";\nimport \"./listItem.css\";\n\ntype Props = {\n  listItem: CoinType;\n};\n\nconst ListItem = (props: Props) => {\n  const { logo_url, name, rank, status, price } = props.listItem;\n  return (\n    <div className=\"list-item\">\n      <div className=\"left\">\n        <div className=\"img_wrapper\">\n          <img src={logo_url} alt=\"\" className=\"list-item_img\" />\n        </div>\n\n        <span className=\"coinParam name\">{name}</span>\n\n        <span className=\"coinParam price\">{price}</span>\n      </div>\n\n      <div className=\"right\">\n        <span className=\"price-change\">\n          {parseFloat(props.listItem[\"1d\"].price_change).toFixed(2)}\n        </span>\n        {parseFloat(props.listItem[\"1d\"].price_change) < 0 ? (\n          <i className=\"arrow down\"></i>\n        ) : (\n          <i className=\"arrow up\"></i>\n        )}\n        <span className=\"coinParam rank\">rank: {rank}</span>\n        <span className=\"coinParam status\">{status}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport { CoinType } from \"../../redux/types/reducer.types\";\nimport ListItem from \"../ListItem/ListItem.component\";\n\nimport \"./List.css\";\n\ntype Props = {\n  data: CoinType[];\n  inputValue: string;\n};\n\nconst List = (props: Props) => {\n  const filteredList = props.data.filter((el) =>\n    el.name.toLowerCase().includes(props.inputValue)\n  );\n  return (\n    <div className=\"list\">\n      <ul>\n        {filteredList.map((item) => (\n          <ListItem listItem={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Dispatch } from \"react\";\nimport { Input } from \"@material-ui/core\";\n\nimport \"./input.css\";\nimport { connect } from \"react-redux\";\nimport { Action, StateType } from \"../../redux/types/reducer.types\";\nimport { SetInputValue } from \"../../redux/actions\";\n\nconst InputCmp = (props: {\n  inputValue: string;\n  setInputValue: (val: string) => void;\n}) => {\n  return (\n    <div className=\"input_wrapper\">\n      <Input\n        className=\"input\"\n        placeholder=\"Enter currency name\"\n        value={props.inputValue}\n        onChange={(e) => props.setInputValue(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateType) => ({\n  inputValue: state.inputValue,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\n  setInputValue: (val: string) => dispatch(SetInputValue(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputCmp);\n","import React from \"react\";\nimport \"./logo.css\";\n\nconst Logo = (props: { title: string }) => {\n  return <h1 className=\"title\">{props.title}</h1>;\n};\n\nexport default Logo;\n","import React, { Dispatch } from \"react\";\nimport { NativeSelect } from \"@material-ui/core\";\n\nimport \"./select.css\";\nimport { connect } from \"react-redux\";\nimport { SetSelectValue } from \"../../redux/actions\";\nimport { Action, StateType } from \"../../redux/types/reducer.types\";\n\ntype Props = {\n  name: \"sort\" | \"second\";\n  options: { value: string; optionName: string }[];\n  selectValue: string;\n  setSelectValue: (val: string) => void;\n  onChangeHandler: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nconst Select = (props: Props) => {\n  return (\n    <div className=\"select_wrapper\">\n      <NativeSelect\n        value={props.selectValue}\n        onChange={(e) => {\n          props.setSelectValue(e.target.value);\n          props.onChangeHandler(e);\n        }}\n        inputProps={{\n          name: props.name,\n          id: props.name + \"_id\",\n        }}\n        className=\"select\"\n      >\n        <option value=\"default\">by rank (default)</option>\n        {props.options.map(({ optionName, value }) => (\n          <option value={value} key={value + \"_key\"}>\n            {optionName}\n          </option>\n        ))}\n      </NativeSelect>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateType) => ({\n  selectValue: state.selectValue,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\n  setSelectValue: (val: string) => dispatch(SetSelectValue(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Select);\n","import React from \"react\";\nimport { Button as ButtonMaterial } from \"@material-ui/core\";\n\nimport \"./button.css\";\n\ntype Props = {\n  title: string;\n  onClickHandler: any;\n};\n\nconst Button = (props: Props) => {\n  return (\n    <div>\n      <ButtonMaterial onClick={() => props.onClickHandler()}>\n        {props.title}\n      </ButtonMaterial>\n    </div>\n  );\n};\n\nexport default Button;\n","import { CoinType, ExportedCoinType } from \"./../redux/types/reducer.types\";\n\nexport type fetchDataParams = {\n  url: string;\n  setToState: (data: CoinType[]) => void;\n  setLoading: (bool: boolean) => void;\n};\n\nexport const fetchDataAndSet = async (params: fetchDataParams) => {\n  params.setLoading(true);\n  fetch(params.url)\n    .then((res) => res.json())\n    .then((parsedRes) => {\n      params.setToState(parsedRes);\n      params.setLoading(false);\n    });\n};\n\nexport const downloadData = (\n  exportObj: CoinType[] | null,\n  exportName: string\n) => {\n  if (!exportObj) {\n    console.log(\"no data provided\");\n  }\n  const reducedCoins = exportObj\n    ?.map(({ name, id, logo_url, price, rank, status, ...rest }) => ({\n      name,\n      id,\n      logo_url,\n      price,\n      rank,\n      status,\n      \"1d\": {\n        price_change: rest[\"1d\"].price_change,\n      },\n    }))\n    .reduce((acc, item) => {\n      const { id, ...rest } = item;\n      acc[id] = { ...rest };\n      return acc;\n    }, {} as ExportedCoinType);\n\n  const dataJson =\n    \"data:text/json;charset=utf-8,\" +\n    encodeURIComponent(JSON.stringify(reducedCoins));\n\n  const downloadTriggerNode = document.createElement(\"a\");\n  downloadTriggerNode.setAttribute(\"href\", dataJson);\n  downloadTriggerNode.setAttribute(\"download\", exportName + \".json\");\n  document.body.appendChild(downloadTriggerNode); // required for firefox\n  downloadTriggerNode.click();\n  downloadTriggerNode.remove();\n};\n\nconst swap = (items: CoinType[], firstIndex: number, secondIndex: number) => {\n  const temp = items[firstIndex];\n  items[firstIndex] = items[secondIndex];\n  items[secondIndex] = temp;\n};\n\nconst partition = (arr: CoinType[], left: number, right: number) => {\n  let center: number =\n      +arr[Math.floor((right + left) / 2)][\"1d\"][\"price_change\"],\n    i = left,\n    j = right;\n  while (i <= j) {\n    while (+arr[i][\"1d\"][\"price_change\"] < center) {\n      i++;\n    }\n    while (+arr[j][\"1d\"][\"price_change\"] > center) {\n      j--;\n    }\n    if (i <= j) {\n      swap(arr, i, j);\n      i++;\n      j--;\n    }\n  }\n  return i;\n};\n\nexport const quickSort = (arr: CoinType[], left: number, right: number) => {\n  let index;\n  if (arr.length > 1) {\n    index = partition(arr, left, right);\n    if (left < index - 1) {\n      quickSort(arr, left, index - 1);\n    }\n    if (index < right) {\n      quickSort(arr, index, right);\n    }\n  }\n  return arr;\n};\n\nexport const shellSort = (arr: CoinType[]): CoinType[] => {\n  let n = arr.length;\n  for (let gap = Math.floor(n / 2); gap > 0; gap = Math.floor(gap / 2)) {\n    for (let i = gap; i < n; i += 1) {\n      let temp = arr[i];\n      let j;\n      for (j = i; j >= gap && arr[j - gap].price > temp.price; j -= gap) {\n        arr[j] = arr[j - gap];\n      }\n      arr[j] = temp;\n    }\n  }\n  return arr;\n};\n","import React, { Dispatch } from \"react\";\nimport Input from \"../Input/Input.component\";\nimport Logo from \"../Logo/Logo.component\";\nimport Select from \"../Select/Select.component\";\nimport Button from \"../Button/Button.component\";\n\nimport \"./header.css\";\nimport { Action } from \"redux\";\nimport {\n  downloadData,\n  fetchDataAndSet,\n  quickSort,\n  shellSort,\n} from \"../../helpers/helpers\";\nimport { setDataAction, setLoading } from \"../../redux/actions\";\nimport { CoinType, StateType } from \"../../redux/types/reducer.types\";\nimport { connect } from \"react-redux\";\n\nconst sortOptions = [\n  {\n    value: \"quick\",\n    optionName: \"sort by prise change (quick)\",\n  },\n  {\n    value: \"shell\",\n    optionName: \"sort by price (shell)\",\n  },\n];\n\ntype Props = {\n  data: CoinType[];\n  setLoading: (loading: boolean) => void;\n  setData: (data: CoinType[]) => void;\n};\n\nconst Header = (props: Props) => {\n  const updateOnClickHandler = () =>\n    fetchDataAndSet({\n      url: \"https://api.nomics.com/v1/currencies/ticker?key=1e911955aee02245962e1da42d7edb1528a05475&&interval=1d,30d&convert=EUR&attributes=id,name,logo_url,price,price_timestamp&page=1&per-page=50\",\n      setToState: props.setData,\n      setLoading: props.setLoading,\n    });\n\n  const onChangeHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    if (e.target.value === \"quick\") {\n      const sortedData = quickSort(props.data, 0, props.data.length - 1);\n      props.setLoading(true);\n      props.setData(sortedData);\n      props.setLoading(false);\n    } else if (e.target.value === \"default\") {\n      const sortedData = props.data.sort(\n        (itemOne, itemTwo) => itemOne.rank - itemTwo.rank\n      );\n      props.setLoading(true);\n      props.setData(sortedData);\n      props.setLoading(false);\n    } else {\n      // const sortedData = shellSort(props.data);\n      const sortedData = props.data.sort(\n        (itemOne, itemTwo) => itemTwo.price - itemOne.price\n      );\n      props.setLoading(true);\n      props.setData(sortedData);\n      props.setLoading(false);\n    }\n  };\n\n  const downloadDataHandler = () =>\n    downloadData(props.data || null, \"cryptoDashboardData\");\n  return (\n    <div className=\"header\">\n      <Logo title=\"crypto dashboard\" />\n      <div className=\"wrapper\">\n        <Select\n          name=\"sort\"\n          options={sortOptions}\n          onChangeHandler={onChangeHandler}\n        />\n        <Input />\n        <div className=\"button_group\">\n          <Button\n            title=\"Update dashboard\"\n            onClickHandler={updateOnClickHandler}\n          />\n          <Button title=\"Download data\" onClickHandler={downloadDataHandler} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MapStateToProps = (state: StateType) => {\n  return {\n    data: state.data,\n  };\n};\n\nconst MapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    setData: (data: CoinType[]) => dispatch(setDataAction(data)),\n    setLoading: (loading: boolean) => dispatch(setLoading(loading)),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Header);\n","import React, { Dispatch, useEffect } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { setDataAction, setLoading } from \"./redux/actions\";\nimport { Action, CoinType, StateType } from \"./redux/types/reducer.types\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.css\";\nimport List from \"./components/List/List.component\";\nimport Header from \"./components/Header/Header.component\";\nimport { fetchDataAndSet } from \"./helpers/helpers\";\n\ntype Props = {\n  data: CoinType[];\n  inputValue: string;\n  isLoading: boolean;\n  setLoading: (loading: boolean) => void;\n  setData: (data: CoinType[]) => void;\n};\n\nconst App = (props: Props) => {\n  useEffect(() => {\n    fetchDataAndSet({\n      url: \"https://api.nomics.com/v1/currencies/ticker?key=1e911955aee02245962e1da42d7edb1528a05475&&interval=1d,30d&convert=EUR&attributes=id,name,logo_url,price,price_timestamp&page=1&per-page=50\",\n      setToState: props.setData,\n      setLoading: props.setLoading,\n    });\n  }, []);\n  return (\n    <div className=\"app\">\n      {props.isLoading ? (\n        <Loader type=\"ThreeDots\" color=\"#000000\" height={300} width={500} />\n      ) : (\n        <>\n          <Header />\n          <List data={props.data} inputValue={props.inputValue} />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst MapStateToProps = (state: StateType) => {\n  return {\n    data: state.data,\n    inputValue: state.inputValue,\n    isLoading: state.loading,\n  };\n};\n\nconst MapDispatchToProps = (dispatch: Dispatch<Action>) => {\n  return {\n    setData: (data: CoinType[]) => dispatch(setDataAction(data)),\n    setLoading: (loading: boolean) => dispatch(setLoading(loading)),\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\n","import { types } from \"./actionTypes\";\nimport { Action, StateType } from \"./types/reducer.types\";\nconst initialState: StateType = {\n  data: [],\n  inputValue: \"\",\n  selectValue: \"\",\n  loading: true,\n};\n\nexport default function rootReducer(state = initialState, action: Action) {\n  console.log(action);\n\n  switch (action.type) {\n    case types.SET_DATA:\n      return { ...state, data: action.payload };\n    case types.SET_LOADING:\n      return { ...state, loading: action.payload };\n    case types.SET_INPUT_VALUE:\n      return { ...state, inputValue: action.payload };\n    case types.SET_SELECT_VALUE:\n      return {\n        ...state,\n        selectValue: action.payload.value,\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./redux/reducer\";\nimport { Provider } from \"react-redux\";\n\nlet store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}